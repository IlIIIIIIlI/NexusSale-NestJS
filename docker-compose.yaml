version: '3'

services:
  zookeeper:
    image: wurstmeister/zookeeper
    ports:
      - '2181:2181'
    networks:
      - seckill-network

  kafka:
    image: wurstmeister/kafka
    ports:
      - '9092:9092'
    environment:
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_CREATE_TOPICS: 'PHONE_NUMBER:1:1'
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - zookeeper
    networks:
      - seckill-network

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    ports:
      - '8080:8080'
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092
      KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper:2181
    depends_on:
      - kafka
      - zookeeper
    networks:
      - seckill-network

  redis:
    image: redis:latest
    ports:
      - '6379:6379'
    networks:
      - seckill-network

  mysql:
    image: mysql:5.7
    ports:
      - '3308:3306'
    environment:
      MYSQL_ROOT_PASSWORD: password
      MYSQL_DATABASE: seckill
    volumes:
      - mysql-data:/var/lib/mysql
    networks:
      - seckill-network
    healthcheck:
      test: ['CMD', 'mysqladmin', 'ping', '-h', 'localhost']
      interval: 10s
      timeout: 5s
      retries: 5

  nestjs-app:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - '3000:3000'
    environment:
      - KAFKA_BROKERS=kafka:9092
      - REDIS_HOST=redis
      - MYSQL_HOST=mysql
      - MYSQL_PORT=3306
      - MYSQL_USER=root
      - MYSQL_ROOT_PASSWORD=password
      - MYSQL_DATABASE=seckill
    networks:
      - seckill-network
    depends_on:
      kafka:
        condition: service_started
      redis:
        condition: service_started
      mysql:
        condition: service_healthy

networks:
  seckill-network:
    driver: bridge

volumes:
  mysql-data:
